name: Android template
on:
  workflow_dispatch:

  push:
    tags:
      - v3.2-capnm**

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.2
  SCONS_CACHE_LIMIT: 2048

jobs:
  android-template:
    runs-on: "ubuntu-20.04"

    name: Template (target=release, tools=no)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # The system image has a not working java version:
      # /usr/lib/jvm/adoptopenjdk-11-hotspot-amd64/bin/java
      # openjdk version "11.0.8" 2020-07-14
      # Install the official one.
      - name: Install and configure dependencies
        run: |
          sudo apt-get install openjdk-8-jdk
          sudo update-java-alternatives -s java-1.8.0-openjdk-amd64
          echo "JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64" >> $GITHUB_ENV

          # Later for scons:
          echo "ANDROID_HOME=$(pwd)/godot-dev/build-tools/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_NDK_ROOT=$(pwd)/godot-dev/build-tools/android-ndk" >> $GITHUB_ENV


      - name: Install Android SDK and NDK
        run: |
          echo "JAVA_HOME: ${JAVA_home}"
          echo "java path: $(which java)"
          java -version
          misc/ci/android-tools-linux.sh

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: android-template-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # You can test your matrix by printing the current Python version
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      # See https://github.com/godotengine/godot-build-scripts/blob/master/build-android/build.sh
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          mkdir -p out/templates
          echo "Build commands:" > out/templates/info.txt

          c="scons -j2 verbose=yes platform=android target=release android_arch=armv7"
          echo "${c}" | tee -a out/templates/info.txt
          ${c}

          c="scons -j2 verbose=yes platform=android target=release android_arch=arm64v8"
          echo "${c}" | tee -a out/templates/info.txt
          ${c}

          c="scons -j2 verbose=yes platform=android target=release_debug android_arch=armv7"
          echo "${c}" | tee -a out/templates/info.txt
          ${c}

          c="scons -j2 verbose=yes platform=android target=release_debug android_arch=arm64v8"
          echo "${c}" | tee -a out/templates/info.txt
          ${c}

          pushd platform/android/java
          ./gradlew generateGodotTemplates
          popd

          echo "path: $(pwd)"
          ls -al
          echo '----' >> out/templates/info.txt
          ls -alh bin | tee -a out/templates/info.txt
          echo '----' >> out/templates/info.txt
          java -version 2>> out/templates/info.txt
          echo '----' >> out/templates/info.txt
          echo "GITHUB_REF: $GITHUB_REF" | tee -a out/templates/info.txt
          echo "GITHUB_SHA: $GITHUB_SHA" | tee -a out/templates/info.txt
          echo "3.2.4.capnm" > out/templates/version.txt

          mv -v bin/android_debug.apk out/templates/
          mv -v bin/android_release.apk out/templates/

          mv -v bin/godot-lib.debug.aar out/templates/
          mv -v bin/godot-lib.release.aar out/templates/
          mv -v bin/android_source.zip out/templates/

      # Export artifact
      - name: Publishing Godot Android template
        uses: actions/upload-artifact@v2
        with:
          name: android-template
          path: out
