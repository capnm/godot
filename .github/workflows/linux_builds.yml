name: Linux editor
on:
  workflow_dispatch:

  push:
    tags:
      - v3.42-capnm**

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.2
  SCONS_CACHE_LIMIT: 1048
  V: 3.42.4.cannm1

jobs:
  linux-editor:
    runs-on: "ubuntu-20.04"
    name: Editor (target=release_debug/debug, tools=yes)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo rm -f /etc/apt/sources.list.d/*
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Install all packages (except scons)
      - name: Configure dependencies
        run: |
          sudo apt-get install build-essential pkg-config libx11-dev libxcursor-dev \
            libxinerama-dev libgl1-mesa-dev libglu-dev libasound2-dev libpulse-dev libudev-dev libxi-dev libxrandr-dev yasm

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: linux-editor-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release
      # (works cross platform; best to keep self contained in it's own step).
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything
      # is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version
          pwd
          ls -al

      # See
      # https://docs.godotengine.org/en/stable/development/compiling/compiling_for_x11.html
      # https://github.com/godotengine/godot-build-scripts/blob/master/build-linux/build.sh

      # use_static_cpp=yes:  Link libgcc and libstdc++ statically for better portability.
      # use_lto=yes:  Breaks here the final binary linking (missing symbols).
      # debug_symbols=no or strip:  ?

      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          mkdir out
          i="out/info-linux-editor.txt"
          echo "Build commands:" > "${i}"

          c="scons use_llvm=yes use_lld=yes use_static_cpp=yes -j2 verbose=yes warnings=all werror=yes platform=x11 tools=yes target=release_debug  debug_symbols=no no_editor_splash=yes"
          echo "${c}" | tee -a "${i}"
          ${c}

          c="scons use_llvm=yes use_lld=yes -j2 verbose=yes warnings=all werror=yes platform=x11 tools=yes target=debug separate_debug_symbols=yes no_editor_splash=yes"
          echo "${c}" | tee -a "${i}"
          ${c}

          ls -al
          echo '----' >> "${i}"
          ls -alh bin | tee -a "${i}"
          echo '----' >> "${i}"
          clang --version >> "${i}"
          echo '----' >> "${i}"
          echo "GITHUB_REF: $GITHUB_REF" | tee -a "${i}"
          echo "GITHUB_SHA: $GITHUB_SHA" | tee -a "${i}"
          echo "$(git log -1)" | tee -a "${i}"

          touch out/._sc_
          mv -v bin/godot.x11.opt.tools.64.llvm out/godot-$V-x11
          mv -v bin/godot.x11.tools.64.llvm out/godot-$V-debug-x11
          mv -v bin/*.debugsymbols out/

      # Export artifact
      - uses: actions/upload-artifact@v2
        with:
          name: linux-editor
          path:
            out
