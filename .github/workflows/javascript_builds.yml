name: HTML5 template
on:
  workflow_dispatch:

  push:
    tags:
      - v3.2-capnm**

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.2
  SCONS_CACHE_LIMIT: 2048
  EM_VERSION: 1.39.20
  EM_CACHE_FOLDER: 'emsdk-cache'

jobs:
  javascript-template:
    runs-on: "ubuntu-20.04"
    name: Template (tools=no)

    steps:
      - uses: actions/checkout@v2

      # Azure repositories are not reliable, we need to prevent azure giving us packages.
      - name: Make apt sources.list use the default Ubuntu repositories
        run: |
          sudo cp -f misc/ci/sources.list /etc/apt/sources.list
          sudo apt-get update

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: javascript-template-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Additional cache for Emscripten generated system libraries
      - name: Load Emscripten cache
        id: javascript-template-emscripten-cache
        uses: actions/cache@v2
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{github.job}}

      # Use python 3.x release (works cross platform)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # You can test your matrix by printing the current Python version
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version

      # See https://github.com/mymindstorm/setup-emsdk
      # uses: mymindstorm/setup-emsdk@v6 -> 7
      - name: Set up Emscripten latest
        uses: mymindstorm/setup-emsdk@v7
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: Verify Emscripten setup
        run: |
          emcc -v

      # See https://github.com/godotengine/godot-build-scripts/blob/master/build-javascript/build.sh
      # debug_symbols=no ?
      - name: Compilation
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          mkdir -p out/templates
          i="out/templates/info-html5-template.txt"
          echo "Build commands:" > "${i}"

          c="scons -j2 verbose=yes warnings=all werror=yes platform=javascript target=release debug_symbols=no tools=no use_closure_compiler=yes"
          echo "${c}" | tee -a "${i}"
          ${c}

          c="scons -j2 verbose=yes warnings=all werror=yes platform=javascript target=release_debug debug_symbols=no tools=no use_closure_compiler=yes"
          echo "${c}" | tee -a "${i}"
          ${c}
          echo '----' >> "${i}"
          ls -alh bin | tee -a "${i}"
          echo '----' >> "${i}"
          emcc -v 2>> "${i}"
          echo '----' >> "${i}"
          echo "GITHUB_REF: $GITHUB_REF" | tee -a "${i}"
          echo "GITHUB_SHA: $GITHUB_SHA" | tee -a "${i}"
          echo "$(git log -1)" | tee -a "${i}"

          mv bin/godot.javascript.opt.zip out/templates/webassembly_release.zip
          mv bin/godot.javascript.opt.debug.zip out/templates/webassembly_debug.zip
          echo "3.2.4.capnm" > out/templates/version.txt

      # Export artifact
      - name: Publishing godot HTML5 template
        uses: actions/upload-artifact@v2
        with:
          name: html5-template
          path:
            out
